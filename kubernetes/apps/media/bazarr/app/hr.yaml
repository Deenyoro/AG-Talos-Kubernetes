---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: bazarr-init-secrets
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.5.1
            env:
              BAZARR__PORT: &port 6767
              BAZARR__INSTANCE_NAME: Bazarr
              BAZARR__APPLICATION_PATH: /config
              BAZARR__LOG_LEVEL: info
              POSTGRES_ENABLED: true
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: bazarr-secrets
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/hostname: kawg125
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Bazarr
          gethomepage.dev/icon: bazarr.png
          gethomepage.dev/description: Subtitle Management
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN_LEGACY}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https2
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: *app
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: 192.168.90.101
        path: /mnt/QuadSquad/EC/Videos
        globalMounts:
          - path: /mnt/QuadSquad/EC/Videos
