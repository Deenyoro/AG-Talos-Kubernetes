---
# yaml-language-server: $schema=https://flux.jank.ing/helmrelease/v2/github/bjw-s/helm-charts/main/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: gpu-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    defaultPodOptions:
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          labels:
            plex-gw: "true"
#            setAirUsGateway: "true"
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 44
              - 109
        initContainers:
            01-pkcs12-reencrypt:
              image:
                repository: ghcr.io/onedr0p/plex
                tag: 1.41.4.9463-630c9f557
              command:
                - /bin/sh
                - -c
              args:
                - openssl pkcs12 -legacy -in /config/certs-old/keystore.p12 -passin file:/pkcs12-password/p12-password -noenc -out /tmp/temp.pem &&
                  openssl pkcs12 -export -out /config/certs/keystore.p12 -passout file:/pkcs12-password/p12-password -in /tmp/temp.pem &&
                  rm -f /tmp/temp.pem
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.4.9463-630c9f557@sha256:1d7589538a85a48ed3c14703b33ae8bacda7ca7db5307c68e8bc1b8ae6e888de
            env:
              TZ: America/New_York
            envFrom:
              - secret: plex-secret
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 6Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 6Gi
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 10.10.12.241
        ports:
          http:
            port: 32400
    ingress:
      external:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN_LEGACY}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: &host "plex.${SECRET_DOMAIN_LEGACY}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN_LEGACY/./-}-production-tls"
      internal:
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        className: internal
        hosts:
          - host: &host-int "plex-int.${SECRET_DOMAIN_LEGACY}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host-int
            secretName: "${SECRET_DOMAIN_LEGACY/./-}-production-tls"
    persistence:
      config:
        existingClaim: plex
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      cert:
        type: secret
        name: ${SECRET_DOMAIN_LEGACY/./-}-production-tls
        globalMounts:
          -  path: /config/certs-old
             readOnly: true
      cert-secret:
        type: secret
        name: legacy-cert-p12
        globalMounts:
          - path: /pkcs12-password
            readOnly: true
      cert-tmp:
        type: emptyDir
        globalMounts:
          - path: /config/certs
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: 192.168.90.101
        path: /mnt/QuadSquad/EC/
        globalMounts:
          - path: /mnt/QuadSquad/EC/
