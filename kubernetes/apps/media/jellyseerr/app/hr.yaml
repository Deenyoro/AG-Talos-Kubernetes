---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyseerr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      jellyseerr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/fallenbagel/jellyseerr
              tag: 2.7.3@sha256:4538137bc5af902dece165f2bf73776d9cf4eafb6dd714670724af8f3eb77764
            env:
              # TZ: "${TIMEZONE}"
              LOG_LEVEL: "info"
              PORT: &port 80
              CONFIG_DIRECTORY: /config
            envFrom:
              - secretRef:
                  name: jellyseerr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        runAsGroup: ${APP_GID}
        fsGroup: ${APP_GID}
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: jellyseerr
        ports:
          http:
            port: *port

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Requests
          gethomepage.dev/icon: jellyseerr.png
          gethomepage.dev/description: Media Requests
        hostnames:
          - "requests.${SECRET_DOMAIN_LEGACY}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https2
        rules:
          - backendRefs:
              - name: *app
                port: *port

#    ingress:
#      app:
#        annotations:
#          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN_LEGACY}
#        className: external
#        hosts:
#          - host: &host "requests.${SECRET_DOMAIN_LEGACY}"
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http
#        tls:
#          - secretName: "${SECRET_DOMAIN_LEGACY/./-}-production-tls"
#            hosts:
#              - *host
#      internal:
#        annotations:
#          gethomepage.dev/enabled: "true"
#          gethomepage.dev/group: Media
#          gethomepage.dev/name: Requests
#          gethomepage.dev/icon: jellyseerr.png
#          gethomepage.dev/description: Media Requests
#        className: internal
#        hosts:
#          - host: *host
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http
#        tls:
#          - hosts:
#              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /config
      cache:
        enabled: true
        existingClaim: jellyseerr-cache
        globalMounts:
          - path: /config/cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tmp:
        type: emptyDir
