# yaml-language-server: $schema=https://flux.jank.ing/helmrelease/v2/github/bjw-s/helm-charts/main/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.4.0@sha256:a9f405688344a8a6f718e2c344438342ad21540986aeb5ab5fa781831eb2c597
            envFrom:
              - secretRef:
                  name: sonarr-init-secrets
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.14.2938@sha256:5126f7ae94745a8e58e6963e1f67e905766c096832eff08b0678355ad0cdecee
            env:
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "True"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: sonarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 6Gi
              limits:
                memory: 6Gi
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/hostname: kawg125
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN_LEGACY}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https2
        rules:
          - backendRefs:
              - name: *app
                port: *port
#    ingress:
#      app:
#        className: internal
#        annotations:
#          gethomepage.dev/enabled: "true"
#          gethomepage.dev/group: Downloads
#          gethomepage.dev/name: Sonarr
#          gethomepage.dev/icon: sonarr.png
#        hosts:
#          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_LEGACY}"
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http
#        tls:
#          - secretName: "${SECRET_DOMAIN_LEGACY/./-}-production-tls"
#            hosts:
#              - *host
    persistence:
      config:
        existingClaim: *app
      tmp:
        type: emptyDir
      mount:
        type: nfs
        server: 192.168.90.101
        path: /mnt/QuadSquad/EC
        globalMounts:
          - path: /mnt/QuadSquad/EC
