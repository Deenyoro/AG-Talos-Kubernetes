---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app meshcentral
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    defaultPodOptions:
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "PreferNoSchedule"
    controllers:
      meshcentral:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/ylianst/meshcentral
              tag: 1.1.42
            env:
              TZ: ${TIMEZONE}
              NODE_ENV: production
              HOSTNAME: ${HOSTNAME}
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    service:
      app:
        controller: meshcentral
        ports:
          http:
            port: ${PORT}
    route:
      app:
        hostnames:
          - "${HOSTNAME}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https2
          - name: internal
            namespace: kube-system
            sectionName: https2
        rules:
          - backendRefs:
              - name: *app
                port: ${PORT}
    ingress:
      external:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - ${HOSTNAME}
            secretName: "${HOSTNAME/./-}-tls"
      internal:
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - ${HOSTNAME}
            secretName: "${HOSTNAME/./-}-tls"
    persistence:
      config:
        type: configMap
        name: meshcentral-config
        advancedMounts:
          meshcentral:
            app:
              - path: /opt/meshcentral/meshcentral-data/config.json
                subPath: config.json
      data:
        existingClaim: meshcentral-v2
        globalMounts:
          - path: /root
            subPath: rootdir
          - path: /opt/meshcentral/meshcentral-data
            subPath: data
          - path: /opt/meshcentral/meshcentral-files
            subPath: userfiles
          - path: /opt/meshcentral/meshcentral-backups
            subPath: backups
