---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: paperless-init-secret
        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.15.3
            env:
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_PORT: "8000"
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_REDIS: redis://dragonfly.database.svc.cluster.local:6379/11
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
            envFrom:
              - secretRef:
                  name: paperless-secret
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 2Gi

    service:
      main:
        controller: main
        ports:
          http:
            port: &port 8000

    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hostnames:
          - "paperless.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https1
          - name: internal
            namespace: kube-system
            sectionName: https1
        rules:
          - backendRefs:
              - name: *app
                port: *port

#    ingress:
#      main:
#        enabled: true
#        className: external
#        annotations:
#          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
#        hosts:
#          - host: &host "paperless.${SECRET_DOMAIN}"
#            paths:
#              - path: /
#                pathType: Prefix
#                service:
#                  identifier: main
#                  port: http
#        tls:
#          - hosts:
#              - *host
#            secretName: "paperless.${SECRET_DOMAIN}-tls"
#
#      internal:
#        enabled: true
#        className: internal
#        hosts:
#          - host: *host
#            paths:
#              - path: /
#                pathType: Prefix
#                service:
#                  identifier: main
#                  port: http
#        tls:
#          - hosts:
#              - *host
#            secretName: "paperless.${SECRET_DOMAIN}-tls"

    persistence:
      library:
        enabled: true
        existingClaim: paperless-library
        globalMounts:
          - path: /library
      consume:
        enabled: true
        existingClaim: paperless-consume
        globalMounts:
          - path: /consume
