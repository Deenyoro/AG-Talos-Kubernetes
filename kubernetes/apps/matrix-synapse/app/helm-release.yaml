---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: matrix-synapse
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: matrix-synapse
      version: 3.10.1
      sourceRef:
        kind: HelmRepository
        name: ananace-charts
        namespace: flux-system
      interval: 5m
  valuesFrom:
    - kind: Secret
      name: matrix-synapse-shared-secret
      valuesKey: registration_pass
      targetPath: config.registrationSharedSecret
  values:
    image:
      repository: ghcr.io/element-hq/synapse
      tag: v1.120.0
    serverName: ${SECRET_DOMAIN_CHAT}
    publicServerName: matrix.${SECRET_DOMAIN_CHAT}
    wellknown:
      enabled: true
      image:
        repository: ghcr.io/rtsp/docker-lighttpd
        tag: 1.4.76

    config:
       enableRegistration: true
#      registrationSharedSecret: # Value is passed via Flux's valuesFrom secret feature.
    extraConfig:
      registration_requires_token: true

    workers:
      default:
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 512Mi
      media_repository:
        enabled: true
        strategy:
          type: Recreate
      federation_sender:
        enabled: false
        replicaCount: 2
      generic_worker:
        enabled: false
        generic: true
        replicaCount: 2
        listeners: [ client ]
        csPaths:
          ## Client API requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/createRoom$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/publicRooms$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/joined_members$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/context/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/members$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state$"
          - "/_matrix/client/v1/rooms/.*/hierarchy$"
          - "/_matrix/client/unstable/org.matrix.msc2716/rooms/.*/batch_send$"
          - "/_matrix/client/unstable/im.nheko.summary/rooms/.*/summary$"
          - "/_matrix/client/(r0|v3|unstable)/account/3pid$"
          - "/_matrix/client/(r0|v3|unstable)/account/whoami$"
          - "/_matrix/client/(r0|v3|unstable)/devices$"
          - "/_matrix/client/versions$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/voip/turnServer$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/event/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/joined_rooms$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/search$"

          ## Encryption requests
          - "/_matrix/client/(r0|v3|unstable)/keys/query$"
          - "/_matrix/client/(r0|v3|unstable)/keys/changes$"
          - "/_matrix/client/(r0|v3|unstable)/keys/claim$"
          - "/_matrix/client/(r0|v3|unstable)/room_keys/"

          ## Registration/login requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/login$"
          - "/_matrix/client/(r0|v3|unstable)/register$"
          - "/_matrix/client/v1/register/m.login.registration_token/validity$"

          ## Event sending requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/redact"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/send"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/join/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/profile/"

          ## User directory search requests
          - "/_matrix/client/(r0|v3|unstable)/user_directory/search"
      synchrotron:
        enabled: true
        generic: true
        listeners: [ client ]
        csPaths:
          - "/_matrix/client/(v2_alpha|r0|v3)/sync$"
          - "/_matrix/client/(api/v1|v2_alpha|r0|v3)/events$"
          - "/_matrix/client/(api/v1|r0|v3)/initialSync$"
          - "/_matrix/client/(api/v1|r0|v3)/rooms/[^/]+/initialSync$"

    ingress:
      enabled: true
      className: "external"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 100M
        # nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
      tls:
        - secretName: matrix.${SECRET_DOMAIN_CHAT}-tls
          hosts:
            - ${SECRET_DOMAIN_CHAT}
            - matrix.${SECRET_DOMAIN_CHAT}

    postgresql:
      enabled: false

    externalPostgresql:
      host: postgres16-rw.database.svc.cluster.local
      port: 5432
      username: matrix_synapse
      existingSecret: synapse-postgres-secrets
      existingSecretPasswordKey: postgresql-pass
      database: "synapse"

    redis:
      enabled: true
      auth:
        enabled: true
        password: ${SECRET_MATRIX_REDIS_PASSWORD}

    synapse:
      strategy:
        type: Recreate
      resources:
        requests:
          cpu: 1000m
          memory: 2500Mi
        limits:
          cpu: 1000m
          memory: 2500Mi

    signingkey:
      job:
        enabled: true
      # existingSecret: matrix-synapse-signingkey # DO NOT REMOVE, job and existingSecret cannot be enabled at the same time

    persistence:
      enabled: true
      existingClaim: synapse-data
