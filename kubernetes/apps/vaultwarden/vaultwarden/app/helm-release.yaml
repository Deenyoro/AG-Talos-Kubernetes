---
# yaml-language-server: $schema=https://flux.jank.ing/helmrelease/v2/github/bjw-s/helm-charts/common-3.5.1/charts/library/common
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vaultwarden
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      vaultwarden:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: vaultwarden/server
              tag: 1.33.2@sha256:87edb99945da91bd7504ac1435495595af2e89ad2c7adc151ae5bf091ec8baf2
            env:
              DATA_FOLDER: data
              ICON_CACHE_FOLDER: data/icon_cache
              ATTACHMENTS_FOLDER: data/attachments
              DOMAIN: "https://vaultwarden.${SECRET_DOMAIN}"
              TZ: "${TIMEZONE}"
              SIGNUPS_ALLOWED: "false"
              WEBSOCKET_ENABLED: "true"
              WEBSOCKET_ADDRESS: 0.0.0.0
              WEBSOCKET_PORT: 3012
              #SMTP_HOST: smtp-relay.default.svc.cluster.local.
              #SMTP_FROM: vaultwarden@${SECRET_DOMAIN}
              #SMTP_FROM_NAME: vaultwarden
              #SMTP_PORT: 2525
              #SMTP_SECURITY: "off"
            envFrom:
              - secret: vaultwarden-secrets
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 2Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 80

    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          hajimari.io/icon: mdi:loc
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https1
          - name: internal
            namespace: kube-system
            sectionName: https1
        rules:
          - backendRefs:
              - name: *app
                port: *port
#    ingress:
#      external:
#        className: external
#        annotations:
#          external-dns.alpha.kubernetes.io/enabled: "true"
#          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}.
#          hajimari.io/icon: mdi:lock
#        hosts:
#          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: *port
#        tls:
#          - hosts:
#              - *host
#      internal:
#        className: internal
#        hosts:
#          - host: *host
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: *port
#        tls:
#          - hosts:
#              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /data
