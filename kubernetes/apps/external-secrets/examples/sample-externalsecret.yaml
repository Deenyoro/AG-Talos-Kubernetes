# Example ExternalSecret for demonstration
# This shows how to migrate from SOPS to External Secrets Operator
#
# To use this example:
# 1. Create an item in Vaultwarden with username/password
# 2. Note the item ID from Vaultwarden web interface
# 3. Replace "your-item-id-here" with the actual item ID
# 4. Apply this manifest to test ESO functionality
#
# This creates a secret named "sample-app-secret-eso" with username and password

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: sample-app-secret-eso
  namespace: default
  labels:
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/component: external-secret
  annotations:
    external-secrets.io/description: "Sample ExternalSecret for testing ESO integration"
spec:
  # Refresh interval - how often to sync from Vaultwarden
  refreshInterval: 1h
  
  # Reference to the ClusterSecretStore
  secretStoreRef:
    name: vaultwarden-login
    kind: ClusterSecretStore
  
  # Target secret configuration
  target:
    name: sample-app-secret-eso
    creationPolicy: Owner
    type: Opaque
  
  # Data mapping from Vaultwarden to Kubernetes secret
  data:
    - secretKey: username
      remoteRef:
        key: "your-item-id-here"  # Replace with actual Vaultwarden item ID
        property: username
    - secretKey: password
      remoteRef:
        key: "your-item-id-here"  # Replace with actual Vaultwarden item ID
        property: password

---
# Example using custom fields from Vaultwarden
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: sample-app-config-eso
  namespace: default
  labels:
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/component: external-secret-config
spec:
  refreshInterval: 30m
  secretStoreRef:
    name: vaultwarden-fields
    kind: ClusterSecretStore
  target:
    name: sample-app-config-eso
    creationPolicy: Owner
  data:
    - secretKey: api-key
      remoteRef:
        key: "your-item-id-here"  # Replace with actual Vaultwarden item ID
        property: "API_KEY"       # Custom field name in Vaultwarden
    - secretKey: database-url
      remoteRef:
        key: "your-item-id-here"  # Replace with actual Vaultwarden item ID
        property: "DATABASE_URL"  # Custom field name in Vaultwarden
