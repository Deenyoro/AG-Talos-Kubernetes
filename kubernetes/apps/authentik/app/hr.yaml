---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: authentik
      version: 2025.2.1
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  driftDetection:
    mode: warn
  values:
    global:
      image:
        repository: ghcr.io/goauthentik/server
        tag: 2025.2.1
      fullnameOverride: authentik
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    authentik:
      log_level: info
      avatars: "initials"
      email:
        host: "smtp-relay.default.svc.cluster.local"
        port: 587
        use_tls: false
        from: "noreply@${SECRET_DOMAIN_COMP}"
      secret_key: "${SECRET_AUTHENTIK_SECRET_KEY}"
      error_reporting:
        enable: false
        send_pii: false
      postgresql:
        host: "postgres16-rw.database.svc.cluster.local"
        name: "authentik"
        user: "authentik"
        password: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      redis:
        host: "dragonfly.database.svc.cluster.local"

    server:
      replicas: 2
      initContainers:
       - name: 01-init-db
         image: ghcr.io/onedr0p/postgres-init:16
         envFrom:
              - secretRef:
                  name: authentik-init-secret
      volumes:
        - name: custom
          persistentVolumeClaim:
            claimName: authentik
      volumeMounts:
        - name: custom
          mountPath: /media
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - &host "auth.${SECRET_DOMAIN}"
        paths:
          - /
        tls:
          - hosts:
              - *host
            secretName: "auth-${SECRET_DOMAIN/./-}-tls"
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi
    worker:
      replicas: 2
      resources:
        requests:
          cpu: 50m
          memory: 512Mi
        limits:
          memory: 1Gi
    additionalObjects:
      - apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: authentik-internal
          namespace: default
        spec:
          ingressClassName: internal
          rules:
            - host: &host "auth.${SECRET_DOMAIN}"
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: authentik-server
                        port:
                          number: 80
          tls:
            - hosts:
                - *host
              secretName: "auth-${SECRET_DOMAIN/./-}-tls"
      - apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          annotations:
            nginx.ingress.kubernetes.io/permanent-redirect: https://auth.${SECRET_DOMAIN}/.well-known/webfinger
            external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          name: authentik-webfinger
        spec:
          ingressClassName: external
          rules:
            - host: *host
              http:
                paths:
                  - backend:
                      service:
                        name: authentik-server
                        port:
                          number: 80
                    path: /.well-known/webfinger
                    pathType: Exact
          tls:
            - hosts:
                - *host
      - apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          annotations:
            nginx.ingress.kubernetes.io/permanent-redirect: https://auth.${SECRET_DOMAIN}
            external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          name: authentik-root-domain-redirect
        spec:
          ingressClassName: external
          rules:
            - host: *host
              http:
                paths:
                  - backend:
                      service:
                        name: authentik-server
                        port:
                          number: 80
                    path: /
                    pathType: Prefix
          tls:
            - hosts:
                - *host
